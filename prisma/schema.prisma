// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  interests String[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Place {
  id         String                              @id @default(uuid())
  provider   String
  providerId String                              @map("provider_id")
  name       String
  category   String[]
  location   Unsupported("geography(Point, 4326)")
  address    String?
  city       String?
  state      String?
  country    String?
  url        String?
  createdAt  DateTime                            @default(now()) @map("created_at")
  updatedAt  DateTime                            @updatedAt @map("updated_at")
  events     Event[]

  @@unique([provider, providerId])
  @@index([category], type: Gin)
  @@index([location], type: Gist)
  @@map("places")
}

model Event {
  id              String   @id @default(uuid())
  provider        String
  providerId      String   @map("provider_id")
  title           String
  description     String?  @db.Text
  category        String[]
  startAt         DateTime @map("start_at")
  endAt           DateTime? @map("end_at")
  venueId         String?  @map("venue_id")
  venue           Place?   @relation(fields: [venueId], references: [id])
  priceMin        Float?   @map("price_min")
  priceMax        Float?   @map("price_max")
  currency        String?  @default("USD")
  url             String?
  popularityScore Float?   @default(0) @map("popularity_score")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@unique([provider, providerId])
  @@index([category], type: Gin)
  @@index([startAt])
  @@index([venueId])
  @@index([popularityScore])
  @@map("events")
}

model IngestLog {
  id         String    @id @default(uuid())
  provider   String
  startedAt  DateTime  @map("started_at")
  finishedAt DateTime? @map("finished_at")
  ok         Boolean
  records    Int       @default(0)
  error      String?   @db.Text

  @@index([provider, startedAt])
  @@map("ingest_logs")
}
